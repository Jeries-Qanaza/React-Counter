{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","count","setCount","react_default","a","createElement","className","onClick","console","log","disabled","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"mMAoBeA,MAff,WAAe,IAAAC,EACYC,mBAAS,GADrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACEI,EADFJ,EAAA,GAEb,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,eAAOJ,EAAP,KACAE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAOC,QAAS,WAAQL,EAASD,EAAQ,GAAIO,QAAQC,IAAIR,KAA3E,OACAE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAOI,SAAmB,IAART,EAAWM,QAAS,WAAQL,EAASD,EAAM,KAA/E,OACAE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAMI,SAAoB,IAAVT,EAAaM,QAAS,WAAQL,EAAS,KAAzE,cCFOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzB,EAAAC,EAAAC,cAACF,EAAAC,EAAMyB,WAAP,KACE1B,EAAAC,EAAAC,cAACyB,EAAD,QAOJnB","file":"static/js/main.7cf612f6.chunk.js","sourcesContent":["\nimport './App.css';\nimport  React,{useState} from \"react\"\n\n\nfunction App() {\n  const [count,  setCount]=useState(0)\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>  {count} </h1>\n        <button className=\"inc\"  onClick={() => { setCount(count + 1); console.log(count);}}> + </button>\n        <button className=\"dec\"  disabled={ count===0} onClick={() => { setCount(count-1)}}> - </button>\n        <br/>\n        <button className=\"res\" disabled={count === 0} onClick={() => { setCount(0) }}> Reset </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}